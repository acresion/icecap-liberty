/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */
// end::war[]
// tag::liberty[]
apply plugin: 'liberty'
apply plugin: 'war'
buildscript {
    repositories {
        // tag::buildmaven[]
        mavenCentral()
        // end::buildmaven[]
    }
    dependencies {
        // tag::liberty-dependency[]
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.9.3'
        // end::liberty-dependency[]
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation libs.httpclient5
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
	testImplementation("org.mockito:mockito-core:2.1.0")
	
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    providedCompile 'org.eclipse.microprofile:microprofile:7.0'
    
    
    
    // This dependency is used by the application.
    implementation libs.guava
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation("org.json:json:20090211")
    implementation project(':icecap-api')
    implementation(group:'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1')
    implementation(group:'javax.annotation', name: 'javax.annotation-api', version: '1.2')
    implementation(group:'javax.servlet', name: 'javax.servlet-api', version: '3.1.0')
    
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}



tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
