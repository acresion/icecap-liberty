
apply plugin: 'liberty'
apply plugin: 'war'

sourceCompatibility = 17
targetCompatibility = 17

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
buildscript {
    repositories {
        // tag::buildmaven[]
        mavenCentral()
        // end::buildmaven[]
    }
    dependencies {
        // tag::liberty-dependency[]
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.9.3'
        // end::liberty-dependency[]
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    implementation project(':icecap-api')
    
    implementation("mysql:mysql-connector-java:5.1.6")
    implementation libs.guava
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation("org.json:json:20090211")
    
    implementation(group:'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1')
    implementation(group:'javax.annotation', name: 'javax.annotation-api', version: '1.2')
    implementation(group:'javax.servlet', name: 'javax.servlet-api', version: '3.1.0')
    
    providedCompile 'org.eclipse.microprofile:microprofile:7.0'
    
    testImplementation libs.junit.jupiter
    testImplementation libs.httpclient5
	testImplementation("org.mockito:mockito-core:2.1.0")
	
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'   
}

ext  {
    liberty.server.var.'http.port' = '9080'
    liberty.server.var.'https.port' = '9443'
    liberty.server.var.'app.context.root' = '/icecap'
    openapi_port = 9080
    openapi_context_root = 'openapi/ui'
}

task openBrowser {
    description = 'Open browser to OPENAPI'
    doLast {
        String port =  openapi_port
        String context = openapi_context_root
        String URL = "http://localhost:" + port + "/" + context 
        java.awt.Desktop.desktop.browse URL.toURI()
        java.awt.Desktop.desktop.browse file("$buildDir/reports/tests/test/index.html").toURI()
    }
}
// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut'
        exceptionFormat 'full'
    }
    systemProperty 'http.port', liberty.server.var.'http.port'
    // end::httpport[]
    // tag::contextroot[]
    systemProperty 'context.root',  liberty.server.var.'app.context.root'
}

test.dependsOn 'libertyStart'
test.finalizedBy(openBrowser)
clean.dependsOn 'libertyStop'
